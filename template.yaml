AWSTemplateFormatVersion: '2010-09-09'Transform: AWS::Serverless-2016-10-31Description: >  LokSabhaWaterBillingAPI    SAM template for the Lok Sabha Water Billing API, managing water charge deductions  for quarters, including allottee synchronization and NOC status checks.  Updated to send billing data to DDO via email for PFMS EIS upload,  add PDF bill generation, and database seeding.Parameters:  Environment:    Type: String    Default: dev    AllowedValues:      - dev      - prod    Description: 'Deployment environment (e.g., dev, prod)'  BillingSoftwareAPIKeyName:    Type: String    Default: LokSabhaWaterBillingAPIKey    Description: 'Name of the API Gateway API Key for the billing software.'  CPWDAPIKeyName:    Type: String    Default: CPWD_eSampada_APIKey    Description: 'Name of the API Gateway API Key for CPWD e-Sampada.'  PFMSAPIKeyName:    Type: String    Default: PFMS_Confirmation_APIKey    Description: 'Name of the API Gateway API Key for PFMS payment confirmations.'  DDOEmailRecipient:    Type: String    Description: 'Email address of the DDO to send monthly deduction data. MUST BE VERIFIED IN SES.'    Default: 'ddo.lok.sabha@example.com' # Placeholder - **MUST BE VERIFIED IN SES**  SESEmailSender:    Type: String    Description: 'A verified email address in SES to send emails from. MUST BE VERIFIED IN SES.'    Default: 'no-reply@lok-sabha-water-billing.example.com' # Placeholder - **MUST BE VERIFIED IN SES**Globals:  Function:    Runtime: python3.9    Timeout: 30 # Default timeout for Lambda functions    MemorySize: 128 # Default memory for Lambda functions    Architectures:      - x86_64    Tracing: Active # Enable X-Ray tracing for better observability    Environment:      Variables:        ENVIRONMENT: !Ref Environment        ALLOTTEES_TABLE_NAME: !Ref AllotteesTable        WATER_BILLS_TABLE_NAME: !Ref WaterBillsTable        PAYMENT_STATUSES_TABLE_NAME: !Ref PaymentStatusesTable        PDF_BILLS_BUCKET_NAME: !Ref PdfBillsBucket # New env var for PDF bucket        DDO_EMAIL_RECIPIENT: !Ref DDOEmailRecipient        SES_EMAIL_SENDER: !Ref SESEmailSenderResources:  # ------------------------------------------------------------  # API Gateway  # ------------------------------------------------------------  WaterBillingApi:    Type: AWS::Serverless::Api    Properties:      Name: !Sub 'LokSabhaWaterBillingAPI-${Environment}'      StageName: !Ref Environment      Auth:        UsagePlan:          CreateUsagePlan: PER_API          Description: Usage plan for Water Billing API          Quota:            Limit: 1000000            Period: MONTH          Throttle:            RateLimit: 1000            BurstLimit: 2000      ApiKeySourceType: HEADER      DefinitionBody: # Define API structure using OpenAPI 3.0        openapi: 3.0.1        info:          title: Lok Sabha Water Billing API          version: '1.0'          description: API for managing Lok Sabha Quarters water billing        x-amazon-apigateway-api-key-source: HEADER        definitions:          StatusUpdate:            type: object            required: [allottee_id, quarter_id, status, effective_date]            properties:              allottee_id:                type: string                pattern: "[A-Z0-9]{6,12}"              quarter_id:                type: string                pattern: "[A-Z0-9-]{4,20}"              employee_id:                type: string                pattern: "[A-Z0-9]{6,12}"                nullable: true              status:                type: string                enum: [OCCUPIED, VACATED, TRANSFERRED]              effective_date:                type: string                format: date              new_allottee_id:                type: string                pattern: "[A-Z0-9]{6,12}"                nullable: true              new_employee_id:                type: string                pattern: "[A-Z0-9]{6,12}"                nullable: true          PaymentConfirmation:            type: object            required: [employee_id, amount_deducted_inr, status]            properties:              employee_id:                type: string                pattern: "[A-Z0-9]{6,12}"              amount_deducted_inr:                type: number                minimum: 0                exclusiveMinimum: true              status:                type: string                enum: [SUCCESS, FAILED, PARTIAL]              failure_reason:                type: string                nullable: true                maxLength: 200        paths:          /v1/allottees:            get:              x-amazon-apigateway-integration:                type: aws_proxy                httpMethod: POST                payloadFormatVersion: '2.0'                uri: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AllotteeSyncFunction.Arn}/invocations'          /v1/allottees/status-updates:            post:              requestBody:                required: true                content:                  application/json:                    schema:                      type: object                      required: [updates]                      properties:                        updates:                          type: array                          minItems: 1                          items:                            type: object                            required: [allottee_id, quarter_id, status, effective_date]                            properties:                              allottee_id:                                type: string                                pattern: "[A-Z0-9]{6,12}"                              quarter_id:                                type: string                                pattern: "[A-Z0-9-]{4,20}"                              employee_id:                                type: string                                pattern: "[A-Z0-9]{6,12}"                                nullable: true                              status:                                type: string                                enum: [OCCUPIED, VACATED, TRANSFERRED]                              effective_date:                                type: string                                format: date                              new_allottee_id:                                type: string                                pattern: "[A-Z0-9]{6,12}"                                nullable: true                              new_employee_id:                                type: string                                pattern: "[A-Z0-9]{6,12}"                                nullable: true              responses:                '200':                  description: Status updates processed successfully.                '400':                  description: Invalid request body.                '401':                  description: Unauthorized - Missing or invalid API key from CPWD.                '500':                  description: Internal Server Error.              security:                - cpwd_api_key: [] # Requires CPWD API Key              x-amazon-apigateway-integration:                type: aws_proxy                httpMethod: POST                uri: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AllotteeSyncFunction.Arn}/invocations'          /v1/allottees/{employee_id}/water-dues-status:            get:              summary: Get Water Dues Status for NOC              parameters:                - name: employee_id                  in: path                  required: true                  schema:                    type: string                  description: The PFMS Employee ID of the allottee.              responses:                '200':                  description: Successful response with water dues status.                  content:                    application/json:                      schema:                        type: object                        properties:                          employee_id:                            type: string                          allottee_id:                            type: string                          quarter_id:                            type: string                          dues_status:                            type: string                            enum: [CLEARED, PENDING, OVERDUE]                          pending_amount:                            type: number                            format: double                          last_paid_month:                            type: string                            pattern: '^\d{4}-(0[1-9]|1[0-2])$'                            nullable: true                          pending_months:                            type: array                            items:                              type: string                              pattern: '^\d{4}-(0[1-9]|1[0-2])$'                '401':                  description: Unauthorized - Missing or invalid API key.                '404':                  description: Allottee not found.                '500':                  description: Internal Server Error.              security:                - cpwd_api_key: []              x-amazon-apigateway-integration:                type: aws_proxy                httpMethod: POST                uri: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DuesStatusFunction.Arn}/invocations'          /v1/payments/confirmations:            post:              requestBody:                required: true                content:                  application/json:                    schema:                      type: object                      required: [billing_month, results]                      properties:                        billing_month:                          type: string                          pattern: '^\d{4}-(0[1-9]|1[0-2])$'                        job_id:                          type: string                        results:                          type: array                          minItems: 1                          items:                            type: object                            required: [employee_id, amount_deducted_inr, status]                            properties:                              employee_id:                                type: string                                pattern: "[A-Z0-9]{6,12}"                              amount_deducted_inr:                                type: number                                minimum: 0                                exclusiveMinimum: true                              status:                                type: string                                enum: [SUCCESS, FAILED, PARTIAL]                              failure_reason:                                type: string                                nullable: true                                maxLength: 200              responses:                '200':                  description: Payment confirmations processed successfully.                '400':                  description: Invalid request body.                '401':                  description: Unauthorized - Missing or invalid API key from PFMS.                '500':                  description: Internal Server Error.              security:                - pfms_api_key: [] # Requires PFMS API Key              x-amazon-apigateway-integration:                type: aws_proxy                httpMethod: POST                uri: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PaymentConfirmationFunction.Arn}/invocations'          /v1/bills/{allottee_id}/{billing_month}/pdf: # NEW PDF API Endpoint            get:              summary: Get Monthly Water Bill as PDF              description: Generates and returns the water bill for a specific allottee and month as a PDF document.              parameters:                - name: allottee_id                  in: path                  required: true                  schema: { type: string }                  description: The unique ID of the allottee.                - name: billing_month                  in: path                  required: true                  schema: { type: string, format: 'YYYY-MM' }                  description: The billing month in YYYY-MM format.              responses:                '200':                  description: Successful response with PDF content.                  content:                    application/pdf:                      schema:                        type: string                        format: binary                '400':                  description: Invalid parameters.                '404':                  description: Bill or allottee not found.                '500':                  description: Internal Server Error.              security:                - api_key: [] # Requires API Key for internal calls              x-amazon-apigateway-integration:                type: aws_proxy                httpMethod: POST                uri: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GeneratePdfBillFunction.Arn}/invocations'        components:          securitySchemes:            api_key:              type: apiKey              name: x-api-key              in: header            cpwd_api_key:              type: apiKey              name: x-api-key              in: header            pfms_api_key:              type: apiKey              name: x-api-key              in: header          schemas:            Allottee:              type: object              required: [allottee_id, employee_id, name, quarter_id, allotment_start_date, status]              properties:                allottee_id:                  type: string                  pattern: "[A-Z0-9]{6,12}"                employee_id:                  type: string                  pattern: "[A-Z0-9]{6,12}"                name:                  type: string                  minLength: 1                  maxLength: 100                quarter_id:                  type: string                  pattern: "[A-Z0-9-]{4,20}"                allotment_start_date:                  type: string                  format: date                allotment_end_date:                  type: string                  format: date                  nullable: true                status:                  type: string                  enum: [OCCUPIED, VACANT, TRANSFERRED]                last_updated:                  type: string                  format: date-time      # Crucial for PDF binary responses!      BinaryMediaTypes:        - 'application/pdf'  # ------------------------------------------------------------  # DynamoDB Tables  # ------------------------------------------------------------  AllotteesTable:    Type: AWS::DynamoDB::Table    Properties:      TableName: !Sub 'LokSabhaWaterBilling-Allottees-${Environment}'      AttributeDefinitions:        - AttributeName: quarter_id          AttributeType: S        - AttributeName: employee_id          AttributeType: S      KeySchema:        - AttributeName: quarter_id          KeyType: HASH      GlobalSecondaryIndexes:        - IndexName: employee_id-index          KeySchema:            - AttributeName: employee_id              KeyType: HASH          Projection:            ProjectionType: ALL          ProvisionedThroughput:            ReadCapacityUnits: 5            WriteCapacityUnits: 5      ProvisionedThroughput:        ReadCapacityUnits: 5        WriteCapacityUnits: 5  WaterBillsTable:    Type: AWS::DynamoDB::Table    Properties:      TableName: !Sub 'LokSabhaWaterBilling-WaterBills-${Environment}'      AttributeDefinitions:        - AttributeName: allottee_id          AttributeType: S        - AttributeName: billing_month          AttributeType: S      KeySchema:        - AttributeName: allottee_id          KeyType: HASH        - AttributeName: billing_month          KeyType: RANGE      BillingMode: PAY_PER_REQUEST  PaymentStatusesTable:    Type: AWS::DynamoDB::Table    Properties:      TableName: !Sub 'LokSabhaWaterBilling-PaymentStatuses-${Environment}'      AttributeDefinitions:        - AttributeName: employee_id          AttributeType: S        - AttributeName: billing_month          AttributeType: S      KeySchema:        - AttributeName: employee_id          KeyType: HASH        - AttributeName: billing_month          KeyType: RANGE      BillingMode: PAY_PER_REQUEST  # ------------------------------------------------------------  # S3 Bucket for PDF Bills  # ------------------------------------------------------------  PdfBillsBucket:    Type: AWS::S3::Bucket    Properties:      BucketName: !Sub 'lok-sabha-water-bills-${AWS::AccountId}-${Environment}' # Unique bucket name      AccessControl: Private # Keep private, accessed via Lambda      PublicAccessBlockConfiguration:        BlockPublicAcls: true        BlockPublicPolicy: true        IgnorePublicAcls: true        RestrictPublicBuckets: true      Tags:        - Key: Environment          Value: !Ref Environment        - Key: ManagedBy          Value: SAM  # ------------------------------------------------------------  # Lambda Functions  # ------------------------------------------------------------  AllotteeSyncFunction:    Type: AWS::Serverless::Function    Properties:      Handler: allottee_sync_lambda.lambda_handler      CodeUri: src/      Policies:        - DynamoDBWritePolicy:            TableName: !Ref AllotteesTable        - DynamoDBReadPolicy:            TableName: !Ref AllotteesTable      Events:        GetAllottees:          Type: Api          Properties:            Path: /v1/allottees            Method: get            RestApiId: !Ref WaterBillingApi            Auth:              ApiKeyRequired: true        UpdateStatus:          Type: Api          Properties:            Path: /v1/allottees/status-updates            Method: post            RestApiId: !Ref WaterBillingApi            Auth:              ApiKeyRequired: true  DuesStatusFunction:    Type: AWS::Serverless::Function    Properties:      Handler: dues_status_lambda.lambda_handler      CodeUri: src/      Policies:        - DynamoDBReadPolicy:            TableName: !Ref AllotteesTable        - DynamoDBReadPolicy:            TableName: !Ref WaterBillsTable        - DynamoDBReadPolicy:            TableName: !Ref PaymentStatusesTable      Events:        GetDuesStatus:          Type: Api          Properties:            Path: /v1/allottees/{employee_id}/water-dues-status            Method: get            RestApiId: !Ref WaterBillingApi            Auth:              ApiKeyRequired: true  SendDeductionsFunction:    Type: AWS::Serverless::Function    Properties:      Handler: send_deductions_lambda.lambda_handler      CodeUri: src/      Policies:        - DynamoDBReadPolicy:            TableName: !Ref AllotteesTable        - DynamoDBReadPolicy:            TableName: !Ref WaterBillsTable        - Statement:            Effect: Allow            Action:              - ses:SendEmail              - ses:SendRawEmail            Resource: !Sub 'arn:${AWS::Partition}:ses:${AWS::Region}:${AWS::AccountId}:identity/${SESEmailSender}'      Events:        MonthlySchedule:          Type: Schedule          Properties:            Schedule: cron(0 2 1 * ? *)            Input: '{"message": "Triggering monthly water deduction process and sending to DDO."}'  PaymentConfirmationFunction:    Type: AWS::Serverless::Function    Properties:      Handler: payment_confirmation_lambda.lambda_handler      CodeUri: src/      Policies:        - DynamoDBWritePolicy:            TableName: !Ref PaymentStatusesTable        - DynamoDBReadPolicy:            TableName: !Ref WaterBillsTable      Events:        ConfirmPayment:          Type: Api          Properties:            Path: /v1/payments/confirmations            Method: post            RestApiId: !Ref WaterBillingApi            Auth:              ApiKeyRequired: true  GeneratePdfBillFunction: # NEW Lambda for PDF generation    Type: AWS::Serverless::Function    Properties:      Handler: generate_pdf_bill_lambda.lambda_handler      CodeUri: src/      MemorySize: 256 # PDF generation might need more memory      Timeout: 60 # Allow more time for PDF generation and S3 upload      Policies:        - DynamoDBReadPolicy: # To read bill data and allottee info            TableName: !Ref WaterBillsTable        - DynamoDBReadPolicy:            TableName: !Ref AllotteesTable        - S3WritePolicy:            BucketName: !Ref PdfBillsBucket        - Statement:            Effect: Allow            Action:              - ses:SendEmail              - ses:SendRawEmail            Resource: !Sub 'arn:${AWS::Partition}:ses:${AWS::Region}:${AWS::AccountId}:identity/${SESEmailSender}'      Events:        GetPdfBill:          Type: Api          Properties:            Path: /v1/bills/{allottee_id}/{billing_month}/pdf            Method: get            RestApiId: !Ref WaterBillingApi            Auth:              ApiKeyRequired: true  SeedDatabaseFunction: # NEW Lambda for seeding dummy data    Type: AWS::Serverless::Function    Properties:      Handler: seed_database_lambda.lambda_handler      CodeUri: src/      MemorySize: 256      Timeout: 300 # Allow more time for seeding many records      Policies:        - DynamoDBCrudPolicy:            TableName: !Ref AllotteesTable        - DynamoDBCrudPolicy:            TableName: !Ref WaterBillsTable        - DynamoDBCrudPolicy:            TableName: !Ref PaymentStatusesTable        - S3CrudPolicy:            BucketName: !Ref PdfBillsBucket